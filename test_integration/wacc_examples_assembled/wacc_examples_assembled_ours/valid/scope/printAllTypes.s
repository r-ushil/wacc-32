.data:
.text:
.global main:
main:
Program { funcs: [], statement: Sequence(Declaration(String, "comma", Expr(StrLiter(", "))), Sequence(Declaration(Int, "x", Expr(IntLiter(5))), Sequence(Scope(Sequence(Declaration(Char, "x", Expr(CharLiter('x'))), Sequence(Scope(Sequence(Declaration(Bool, "x", Expr(BoolLiter(true))), Sequence(Scope(Sequence(Declaration(String, "x", Expr(StrLiter("this is a string"))), Sequence(Scope(Sequence(Declaration(Array(Int), "x", ArrayLiter(ArrayLiter([IntLiter(1), IntLiter(2), IntLiter(3)]))), Sequence(Scope(Sequence(Declaration(Array(Char), "x", ArrayLiter(ArrayLiter([CharLiter('x'), CharLiter('y'), CharLiter('z')]))), Sequence(Scope(Sequence(Declaration(Array(Bool), "x", ArrayLiter(ArrayLiter([BoolLiter(true), BoolLiter(false), BoolLiter(true)]))), Sequence(Scope(Sequence(Declaration(Array(String), "x", ArrayLiter(ArrayLiter([StrLiter("array"), StrLiter("of"), StrLiter("strings")]))), Sequence(Scope(Sequence(Declaration(Pair(Int, Int), "x", Pair(IntLiter(1), IntLiter(2))), Sequence(Scope(Sequence(Declaration(Pair(Char, Bool), "y", Pair(CharLiter('a'), BoolLiter(true))), Sequence(Declaration(Pair(Char, Bool), "z", Pair(CharLiter('b'), BoolLiter(false))), Sequence(Declaration(Array(Pair(Char, Bool)), "x", ArrayLiter(ArrayLiter([Ident("y"), Ident("z")]))), Sequence(Scope(Sequence(Declaration(Array(Int), "y", ArrayLiter(ArrayLiter([IntLiter(1), IntLiter(2), IntLiter(3)]))), Sequence(Declaration(Array(Char), "z", ArrayLiter(ArrayLiter([CharLiter('a'), CharLiter('b'), CharLiter('c')]))), Sequence(Declaration(Pair(Array(Int), Array(Char)), "x", Pair(Ident("y"), Ident("z"))), Sequence(Scope(Skip), Sequence(Declaration(Array(Int), "a", PairElem(Fst(Ident("x")))), Sequence(Declaration(Array(Char), "b", PairElem(Snd(Ident("x")))), Sequence(Print(StrLiter("( [")), Sequence(Print(ArrayElem(ArrayElem("a", [IntLiter(0)]))), Sequence(Print(Ident("comma")), Sequence(Print(ArrayElem(ArrayElem("a", [IntLiter(1)]))), Sequence(Print(Ident("comma")), Sequence(Print(ArrayElem(ArrayElem("a", [IntLiter(2)]))), Sequence(Print(StrLiter("] , [")), Sequence(Print(ArrayElem(ArrayElem("b", [IntLiter(0)]))), Sequence(Print(Ident("comma")), Sequence(Print(ArrayElem(ArrayElem("b", [IntLiter(1)]))), Sequence(Print(Ident("comma")), Sequence(Print(ArrayElem(ArrayElem("b", [IntLiter(2)]))), Println(StrLiter("] )"))))))))))))))))))))), Sequence(Declaration(Pair(Char, Bool), "a", Expr(ArrayElem(ArrayElem("x", [IntLiter(0)])))), Sequence(Declaration(Char, "aa", PairElem(Fst(Ident("a")))), Sequence(Declaration(Bool, "ab", PairElem(Snd(Ident("a")))), Sequence(Declaration(Pair(Char, Bool), "b", Expr(ArrayElem(ArrayElem("x", [IntLiter(1)])))), Sequence(Declaration(Char, "ba", PairElem(Fst(Ident("b")))), Sequence(Declaration(Bool, "bb", PairElem(Snd(Ident("b")))), Sequence(Print(StrLiter("[ ")), Sequence(Print(Ident("a")), Sequence(Print(StrLiter(" = (")), Sequence(Print(Ident("aa")), Sequence(Print(Ident("comma")), Sequence(Print(Ident("ab")), Sequence(Print(StrLiter("), ")), Sequence(Print(Ident("b")), Sequence(Print(StrLiter(" = (")), Sequence(Print(Ident("ba")), Sequence(Print(Ident("comma")), Sequence(Print(Ident("bb")), Println(StrLiter(") ]"))))))))))))))))))))))))), Sequence(Declaration(Int, "y", PairElem(Fst(Ident("x")))), Sequence(Declaration(Int, "z", PairElem(Snd(Ident("x")))), Sequence(Print(Ident("y")), Sequence(Print(Ident("comma")), Println(Ident("z"))))))))), Sequence(Declaration(String, "a", Expr(ArrayElem(ArrayElem("x", [IntLiter(0)])))), Sequence(Declaration(String, "b", Expr(ArrayElem(ArrayElem("x", [IntLiter(1)])))), Sequence(Declaration(String, "c", Expr(ArrayElem(ArrayElem("x", [IntLiter(2)])))), Sequence(Print(Ident("a")), Sequence(Print(Ident("comma")), Sequence(Print(Ident("b")), Sequence(Print(Ident("comma")), Println(Ident("c")))))))))))), Sequence(Print(ArrayElem(ArrayElem("x", [IntLiter(0)]))), Sequence(Print(Ident("comma")), Sequence(Print(ArrayElem(ArrayElem("x", [IntLiter(1)]))), Sequence(Print(Ident("comma")), Println(ArrayElem(ArrayElem("x", [IntLiter(2)])))))))))), Println(Ident("x"))))), Sequence(Declaration(Int, "a", Expr(ArrayElem(ArrayElem("x", [IntLiter(0)])))), Sequence(Declaration(Int, "b", Expr(ArrayElem(ArrayElem("x", [IntLiter(1)])))), Sequence(Declaration(Int, "c", Expr(ArrayElem(ArrayElem("x", [IntLiter(2)])))), Sequence(Print(Ident("a")), Sequence(Print(Ident("comma")), Sequence(Print(Ident("b")), Sequence(Print(Ident("comma")), Println(Ident("c")))))))))))), Println(Ident("x"))))), Println(Ident("x"))))), Println(Ident("x"))))), Println(Ident("x"))))) }.generate(_, 4):
